# Alembic Configuration File
# This file contains the configuration for Alembic database migrations

[alembic]
# path to migration scripts
script_location = alembic

# template used to generate migration file names
file_template = %%(rev)s_%%(slug)s

# sys.path path, will be prepended to sys.path if present
prepend_sys_path = .

# timezone to use when rendering the date
# within the migration file as well as the filename.
# string value is passed to dateutil.tz.gettz()
# leave blank for localtime
# timezone =

# max length of characters to apply to the
# "slug" field
# truncate_slug_len = 40

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false

# set to 'true' to allow .pyc and .pyo files without
# a source .py file to be detected as revisions in the
# versions/ directory
# sourceless = false

# set to 'true' to run env.py in a separate process
# instead of within the alembic process
# separate_process_env = false

# on Windows, ALCHEMY_SQLALCHEMY_URL may need quoting for special characters contained therein.
# it is the value of this variable that is passed to the
# MigrationContext.configure() method as the
# "sqlalchemy.url" argument.
sqlalchemy.url = postgresql://postgres:123456@localhost:5433/budget_tracker

# set the location of the migration files
# the default is alembic/versions
# version_locations = %(here)s/bar:%(here)s/bat:alembic/versions

# version location specification; This defaults
# to alembic/versions.  When the `revision_environment`
# directive is true, alembic will consult Python files in this
# location, as well as the migration environment.
# Each file should contain a variable `revision` identifying the
# branch point, and can optionally contain a variable `down_revision`
# identifying the current head of the branch. When these variables
# are defined, the initial "stamping" of a revision will be performed.
#
# The location of the staging area, default is 'alembic/versions'
# version_locations = alembic/versions

# Logging configuration
# Loggers to configure
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
